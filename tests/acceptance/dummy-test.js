import { currentURL, visit } from '@ember/test-helpers';
import { module, test } from 'qunit';
import { setupApplicationTest } from 'ember-qunit';
import { percySnapshot } from 'ember-percy';

module('Acceptance | dummy', function(hooks) {
  setupApplicationTest(hooks);

  test('visiting /', async function(assert) {
    await visit('/');
    assert.equal(currentURL(), '/');
    percySnapshot('dummy homepage test');
  });

  test('duplicate snapshots are skipped', async function(assert) {
    await visit('/');
    assert.equal(currentURL(), '/');
    percySnapshot('dupe test');
    // Test duplicate name (should log warning and skip this snapshot):
    percySnapshot('dupe test');
  });

  test('name is autogenerated if given a QUnit assert object', function(assert) {
    assert.expect(0);
    percySnapshot(assert);
  });

  test('name is autogenerated if given a Mocha test object', function(assert) {
    assert.expect(0);
    var mochaTestDouble = {
      fullTitle: function() {
        return 'acceptance test - mocked fullTitle for Mocha tests';
      },
    };
    percySnapshot(mochaTestDouble);
  });

  test('enableJavaScript option can pass through', async function(assert) {
    await visit('/');
    assert.equal(currentURL(), '/');
    percySnapshot(assert, {enableJavaScript: true});
  });

  test('attributes on rootElement are copied to the DOM snapshot', async function(assert) {
    await visit('/test-route-styles');
    assert.equal(currentURL(), '/test-route-styles');
    percySnapshot(assert);
  });
});

test('class on body that turns it green is preserved the DOM snapshot', function(assert) {
  visit('/');
  // find's default scope is the testing container, so be sure to rescope to html
  let body = find('body', 'html');
  body.attr('class', 'AllGreen');
  andThen(function() {
    assert.equal(currentURL(), '/');
  });
  percySnapshot(assert);
  assert.equal(body.attr('class').includes('AllGreen'), true);
  // Remove AllGreen so it doesn't impact other tests
  andThen(function() {
    body.attr('class', '');
  });
});
